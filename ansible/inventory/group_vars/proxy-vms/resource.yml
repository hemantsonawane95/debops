resources__group_commands:
  - name: 'Enable haproxy and keepalived'
    shell: |
      if systemctl is-disabled keepalived ; then
          systemctl enabled keepalived
      fi

      if systemctl is-disabled haproxy ; then
          systemctl enabled haproxy
      fi

      systemctl reload keepalived
      systemctl haproxy keepalived

resources__group_files:
  - dest: '/etc/netplan/50-cloud-init.yaml'
    mode: '0644'
    content: |
      network:
        version: 2
        renderer: networkd
        ethernets:
          ens3:
            mtu: {{ mgmt_mtu }}
            addresses:
            - {{ ansible_host }}/22
            gateway4: {{ mgmt_gateway }}
            nameservers:
              addresses:
              - 8.8.8.8
              - 8.8.4.4
  - dest: '/etc/keepalived.conf'
    mode: '0644'
    content: |
      ! Configuration File for keepalived
      vrrp_instance VIP1 {
          state BACKUP
          nopreempt
          garp_master_delay 5
          garp_master_repeat 3
          garp_master_refresh 1
          dont_track_primary
          interface ens3
          virtual_router_id 255
          priority 100
          advert_int 1
          authentication {
              auth_type AH
              auth_pass pass
          }
          virtual_ipaddress {
              {{ vip }}
          }
      }

  - dest: '/etc/haproxy/haproxy.cfg'
    mode: '0644'
    content: |
      global
        log /dev/log  local0
        log /dev/log  local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
              ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
              ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
              ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

      defaults
        log global
        mode  http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

      frontend kube-ssl
        bind *:443
        mode tcp
        default_backend ssl-backend

      backend ssl-backend
          mode tcp
          balance roundrobin
          option tcp-check
          server s1 {{hostvars["pr1-ctl-01.cloudpoint.tcpro.cz"].ansible_host}}:30443 check
          server s2 {{hostvars["pr1-ctl-02.cloudpoint.tcpro.cz"].ansible_host}}:30443 check
          server s3 {{hostvars["pr1-ctl-03.cloudpoint.tcpro.cz"].ansible_host}}:30443 check

      frontend kube-http
        bind *:80
        mode tcp
        default_backend http-backend

      backend http-backend
          mode tcp
          balance roundrobin
          option tcp-check
          server s1 {{hostvars["pr1-ctl-01.cloudpoint.tcpro.cz"].ansible_host}}:30080 check
          server s2 {{hostvars["pr1-ctl-02.cloudpoint.tcpro.cz"].ansible_host}}:30080 check
          server s3 {{hostvars["pr1-ctl-03.cloudpoint.tcpro.cz"].ansible_host}}:30080 check
      # end
